# 이 실습 중에 파드 목록을 몇 번 더 출력했다면, 롤백이 일어나는 과정을 볼 수 있었을 것이다.
# 먼저 11.6버전을 실행중인 파드가 하나 있고 여기에 11.8버전을 실행하는 파드가 추가된다.
# 하지만 이 파드는 프로브의 상태 체크를 통과하지 못하고 제한 시간 30초를 초과하여 업그레이드가 롤백된다.
# 두번째 파드도 롤백과 함께 제거된다.

# kubectl을 사용했을 때처럼 계속 파드를 재시작하거나 크래시루프백오프 상태에 빠지는 일이 발생하지 않는다.

# 이 과정에서 todo 애플리케이션은 동작에 방해를 받거나 처리 용량이 감소하지 않는다.
# 그다음 버전은 잘못된 컨테이너 명령을 제거하고, 헬름에서 배치된 애플리케이션을 테스트하는 템플릿 변수를 추가했다.
# 이 테스트는 설치 과정에서 실행되지 않으며, 우리가 원하는 시점에 실행할 수 있어 릴리스가 정상적으로 동작하는지 확인하는 스모크 테스트 용도로 제격이다.

<!-- todo-list/v3/todo-db-test-job.yaml -->
apiVersion: batch/v1
kind: Job                                 # 잡의 정의다.
metadata:
  name:  {{ .Release.Name }}-db-test
  labels:
    kiamol: ch12
  annotations:
    "helm.sh/hook": test                  # 테스트 중 실행할 잡임을 명기
spec:
  completions: 1
  backoffLimit: 0                         # 한 번만 실행하며 재시도를 하지 않음
  template:
    spec:                                 # SQL 질의를 실행하는 컨테이너를 정의
      restartPolicy: Never
      containers:
        - name: db
          image: postgres:11.8-alpine          
          env:
          - name: PGHOST 
            value: {{ .Release.Name }}-db
          - name: PGDATABASE 
            value: todo
          - name: PGUSER
            value: postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: todo-db-secret
          command: ["psql", "-c", "SELECT COUNT(*) FROM \"public\".\"ToDos\""]



# 예제는 to-do 애플리케이션 차트 버전 4의 업그레이드 사전 테스트를 수행하는 잡의 정의다.
# 여기서 살펴볼 템플릿은 두가지다. 하나는 잡의 정의고, 다른 하나는 잡에서 실행할 스크립트가 담긴 컨피그맵이다.
# 그리고 애너테이션을 통해 헬름 생애주기중 어떤 시점에 잡을 실행해야 할지 지정한다.
# 이 잡은 어그레이드할 때만 실행되며 신규로 설치할 때는 실행되지 않는다.
# 그러고 우선순위 애너테이션(hook-weight)으로 잡 생성 전에 먼저 컨피그맵 객체가 생성되어 있도록 한다.
# 이렇게 생애 주기 및 우선순위를 설정하여 헬름에서 복잡한 검증 절차를 제대로 실행시킬 수 있도록 한다.

<!-- todo-db-check-job.yaml -->
apiVersion: batch/v1
kind: Job                             # 일반적인 잡의 정의
metadata:
  name:  {{ .Release.Name }}-db-check
  labels:
    kiamol: ch12
  annotations:
    "helm.sh/hook": pre-upgrade       # 이 잡은 업그레이드 전 시점에
    "helm.sh/hook-weight": "10"       # 실행되어야 하며 잡에 필요한 컨피그맵 객체보다 
spec:                                 # 나중에 생성되어야 한다고 생성 순서 조건은 명기
  completions: 1
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: db
          image: postgres:11.8-alpine          
          env:
          - name: PGHOST 
            value: {{ .Release.Name }}-db
          - name: PGDATABASE 
            value: todo
          - name: PGUSER
            value: postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: todo-db-secret
          command: ["/scripts/check-postgres-version.sh"]
          volumeMounts:
            - name: scripts
              mountPath: "/scripts"
      volumes:
        - name: scripts
          configMap:
            name: {{ .Release.Name }}-db-check-scripts
            defaultMode: 0555



